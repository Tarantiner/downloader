文件过滤机制：
1.只下载特定文件类型（downloadTypes），若为空，则都下载
2.基于1，不下载排除的文件类型（excludeDownloadTypes）
3.基于1.2，查询库里是否已经存在记录，若存在，则不下载（根据文件名和文件大小生成唯一值）
4.基于1.2.3
    若本地存在文件，且大小等于实际大小，则跳过
    否则：
        大小非4096整数倍，则判定文件损坏，删除原文件并重新下载（每次请求大小都是4096整数倍）
        大小为4096整数倍，则基于断点下载


下载机制：
目前已放弃多线程版本的更新，只维护单线程版本
单线程版本不用api暴露的方法，而是自己控制下载，才能保证文件断点续传
增加重试机制，下载文件块，最多重试x次，若x次都失败，则程序继续处理下一个文件
若想指定下载某个文件，可指定download -s=100，指定从第100条消息下载，减少处理前面的消息的耗时


##########################################################################################
v1.0：
更新：
修复某些错误未写入日志的问题，以及更合适的日志级别
修复判定文件损坏，没有删除旧文件就继续下载，导致下载了损坏的文件问题
遍历聊天增加重试机制，最多5次
单线程下载文件块增加重试机制，下载块失败最多重试5次
增加限制的异常捕获，按要求等待x秒，然后继续下载

新支持了很多运行参数：
C:\Users\admin\go\src\downloader>download --help
Usage of download:
  -e int
        处理到哪条消息ID，默认0不限制，不会采集该条消息
  -export
        是否导出该会话的群频信息true/false
  -id int
        群ID，常用于私密群
  -name string
        目标群频名
  -p int
        每次请求多少条聊天1-100，若下载文件大，建议设小，减少文件引用过期情况 (default 3)
  -s int
        从哪条消息ID开始处理，需>=1，从该条消息开始采集 (default 1)
  -t int
        遍历聊天和下载文件出现异常的重试次数 (default 5)


提速技巧：
    单线程版速度慢，但是可以部署多个，如
    download.exe -name="xx" -s=1 -e=1000 处理1-1000
    download.exe -name="xx" -s=1000 -e=2000 处理1000-2000
    download.exe -name="xx" -s=2000 -e=3000 处理2000-3000
    如果不知道怎么配置结束的消息ID->e参数，可以在telegram中对应群组，找到最后一条消息ID，右键copy message link，就知道该群组最新的消息ID了
    为保障稳定，最好每个exe配置独立的sessionDir，使用独立的会话



##########################################################################################
2025.4.16
v1.1：
更新：
支持下载聊天中某话题下的消息资源，运行时加上-topic参数即可